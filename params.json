{"name":"Ehcache-sizeofengine","tagline":"Configurable sizeOf engine for Ehcache","body":"What is this?\r\n-------------\r\n\r\nSimply by being on your application's classpath, ehcache-sizeofengine will automagically be picked up by [Ehcache](http://www.ehcache.org).\r\nIt replaces the SizeOfEngine implementation that ships with Ehcache (2.8.0 onwards) with the EhcacheSizeOfEngine implementation of this project, which lets you control what is then being sized.\r\n\r\nUsing existing filter configurators\r\n-----------------------------------\r\n\r\nYou simply need to add the jars of the modules that you want along side this project's jar\r\n\r\n - Hibernate\r\n    - link to project\r\n - Groovy\r\n    - link to project\r\n\r\nConfiguring the Filter yourself\r\n-------------------------------\r\n\r\nIn order to ignore fields or instances of certain classes when sizing object graphs, you'll have to\r\n 1. Create a [ServiceLoader](http://docs.oracle.com/javase/6/docs/api/java/util/ServiceLoader.html) project, for [net.sf.ehcache.sizeofengine.FilterConfigurator](http://terracotta-oss.github.io/ehcache-sizeofengine/apidocs/net/sf/ehcache/sizeofengine/FilterConfigurator.html)\r\n   - Have your jar contain a text file named META-INF/services/net.sf.ehcache.sizeofengine.FilterConfigurator\r\n   - The file should contain the fully qualified class name of your implementation\r\n 2. Implement [FilterConfigurator](http://terracotta-oss.github.io/ehcache-sizeofengine/apidocs/net/sf/ehcache/sizeofengine/FilterConfigurator.html)'s configure method to configure the [Filter](http://terracotta-oss.github.io/ehcache-sizeofengine/apidocs/net/sf/ehcache/sizeofengine/Filter.html) of classes and fields\r\n 3. put your jar on your application's classpath, along side of the ehcache jar and this ehcache-sizeofengine jar\r\n 4. Use Ehcache's [Automatic Resource Control](http://ehcache.org/documentation/arc) for your heap tier\r\n\r\nExample\r\n-------\r\n\r\n        public static final class StupidConfigurator implements FilterConfigurator {\r\n\r\n            @Override\r\n            public void configure(final Filter ehcacheFilter) {\r\n                // Will not size any instance of Number, and given the second arg, no subtype neither\r\n                ehcacheFilter.ignoreInstancesOf(Number.class, false);\r\n            }\r\n        }\r\n\r\nThere can be as many FilterConfigurator on the classpath as required, they'll have configure the filter once.\r\nThe Filter is shared across all SizeOfEngine instances created.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}